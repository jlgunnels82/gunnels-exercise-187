//AUTHOR: Jacob Gunnels
//COUSE: CPT 187
//PURPOSE: SodOrder class for SodNotZod product ordering program.
//			Supportive class to set variables according to user input.
//STARTDATE: 04/15/2020

package edu.cpt187.gunnels.participation;

public class SodOrder {
	
	private static final double ZERO_TOTAL = 0.0;
	private static final double TAX_RATE = 0.075;
	
	private int[] itemCounts;
	private int[] discountCounts;
	private int[] prizeCounts;
	private char discountType = ' ';
	private int itemID = 0;
	private String itemName = "";
	private double itemPrice = 0.0;
	private String discountName = "";
	private double discountRate = 0.0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	private String prizeName = "";
	
	public SodOrder()
	{
		
	}
	
	//Setters
	public void setItemCountArray(int borrowedMaxRecords)
	{
		itemCounts = new int[borrowedMaxRecords];
	}
	
	public void setLastItemSelectionIndex(int borrowedSearchIndex)
	{
		lastItemSelectedIndex = borrowedSearchIndex;
	}
	
	public void setItemID(int[] borrowedItemIDs)
	{
		itemID = borrowedItemIDs[lastItemSelectedIndex];
	}
	
	public void setItemName(String[] borrowedItemNames)
	{
		itemName = borrowedItemNames[lastItemSelectedIndex];
		itemCounts[lastItemSelectedIndex]++;
	}
		
	public void setItemPrice(double[] borrowedItemPrices)
	{
		itemPrice = borrowedItemPrices[lastItemSelectedIndex];
	}
	
	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}
	
	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection;
	}
	
	public void setDiscountName(String[] borrowedDiscountNames)
	{	
		discountCounts = new int[borrowedDiscountNames.length];
		
		if (discountType == 'A')
		{
			discountName = borrowedDiscountNames[0];
			discountCounts[0]++;
		}
		else if (discountType == 'B')
		{
			discountName = borrowedDiscountNames[1];
			discountCounts[1]++;
		}
		else
		{
			discountName = borrowedDiscountNames[2];
			discountCounts[2]++;
		}
	}
	
	public void setDiscountRate(double[] borrowedDiscountRate)
	{
		if (discountType == 'A')
		{
			discountRate = borrowedDiscountRate[0];
		}
		else if (discountType == 'B')
		{
			discountRate = borrowedDiscountRate[1];
		}
		else
		{
			discountRate = borrowedDiscountRate[2];
		}
	}
	
	public void setPrizeName(String[] borrowedPrizeNames, int borrowedPrizeIndex)
	{	
		prizeName = borrowedPrizeNames[borrowedPrizeIndex];
		prizeCounts = new int[borrowedPrizeNames.length];
		prizeCounts[borrowedPrizeIndex]++;
	}
	
	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{	
		borrowedInventoryObject.setReduceStock(lastItemSelectedIndex - howMany);
	}

//Getters
	public int getInStockCount(int[] borrowedInStockCounts)
	{
		return borrowedInStockCounts[lastItemSelectedIndex];
	}
	
	public int getItemID()
	{
		return itemID;
	}
	
	public String getItemName()
	{
		return itemName;
	}
	
	public double getItemPrice()
	{
		return itemPrice;
	}
	
	public int[] getItemCounts()
	{
		return itemCounts;
	}
	
	public int getHowMany()
	{
		return howMany;
	}
	
	public String getDiscountName()
	{
		return discountName;
	}
	
	public double getDiscountRate()
	{
		return discountRate;
	}
	
	public int[] getDiscountCounts()
	{
		return discountCounts;
	}
	
	public double getDiscountAmt()
	{
		return itemPrice*discountRate;
	}
	
	public double getDiscountPrice()
	{
		return itemPrice-getDiscountAmt();
	}
	
	public String getPrizeName()
	{
		return prizeName;
	}
	
	public int[] getPrizeCounts()
	{
		return prizeCounts;
	}
	
	public double getSubTotal()
	{
		return howMany*getDiscountPrice();
	}
	
	public double getTaxRate()
	{
		return TAX_RATE;
	}
	
	public double getTaxAmt()
	{
		return TAX_RATE*getSubTotal();
	}
	
	public double getTotalCost()
	{
		if (discountType == ' ')
		{
			return ZERO_TOTAL;
		}
		else
		{
			return getSubTotal()+getTaxAmt();
		}
	}

}//END SodOrder
